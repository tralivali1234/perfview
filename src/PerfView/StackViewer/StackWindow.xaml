<src:WindowBase x:Class="PerfView.StackWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:src="clr-namespace:PerfView"
    xmlns:src1="clr-namespace:PerfView"
    xmlns:controls="clr-namespace:Controls"
    Title="PerfView Stacks"
    Width="919" Height="605"
    >
    <Window.Resources>
        <!-- DataContext for this template is a CallTreeViewNode -->
        <DataTemplate x:Key="TreeControlCell">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding IndentString}" FontFamily="Courier New"/>
                <CheckBox IsChecked="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding HasChildren}"/>
                <TextBlock Name="Name" Text="{Binding Name}" FontWeight="{Binding FontWeight}"/>
                <TextBlock Margin="5,0,0,0" Visibility="{Binding VisibleIfDisplayingSecondary}">
                    <Hyperlink Command="Help" CommandParameter="PrimaryAndSecondaryNodes">?</Hyperlink>
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <Style x:Key="HeaderStyle">
            <Setter Property="TextBlock.FontSize" Value="14" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.Background" Value="Transparent" />
            <Setter Property="TextBlock.Margin" Value="0,10,0,0" />
        </Style>
    </Window.Resources>

    <!-- DataContext for this window is the StackWindow itself -->
    <DockPanel Name="DockPanel" Background="#7F3E3A3E">
        <DockPanel.CommandBindings>
            <CommandBinding Command="{x:Static src:StackWindow.ToggleNoPadOnCopyCommand}" Executed="DoToggleNoPadOnCopy" />
            <CommandBinding Command="{x:Static src:StackWindow.UpdateCommand}" Executed="DoUpdate" />
            <CommandBinding Command="BrowseBack" Executed="DoBack" CanExecute="CanDoBack"/>
            <CommandBinding Command="BrowseForward" Executed="DoForward" CanExecute="CanDoForward" />

            <CommandBinding Command="{x:Static src:StackWindow.NewWindowCommand}" Executed="DoNewWindow" />
            <CommandBinding Command="{x:Static src:StackWindow.DrillIntoCommand}" Executed="DoDrillInto" />
            <CommandBinding Command="{x:Static src:StackWindow.FlattenCommand}" Executed="DoFlatten" />
            <CommandBinding Command="{x:Static src:StackWindow.FindCommand}" Executed="DoFind"/>
            <CommandBinding Command="{x:Static src:StackWindow.FindNextCommand}" Executed="DoFindNext"/>

            <CommandBinding Command="{x:Static src:StackWindow.FindInByNameCommand}" Executed="DoFindInByName"/>
            <CommandBinding Command="{x:Static src:StackWindow.ViewInCallerCalleeCommand}" Executed="DoViewInCallerCallee"/>
            <CommandBinding Command="{x:Static src:StackWindow.ViewInCallersCommand}" Executed="DoViewInCallers"/>
            <CommandBinding Command="{x:Static src:StackWindow.ViewInCalleesCommand}" Executed="DoViewInCallees"/>
            <CommandBinding Command="{x:Static src:StackWindow.FindInCallTreeCommand}" Executed="DoFindInCallTreeName"/>

            <CommandBinding Command="{x:Static src:StackWindow.GroupModuleCommand}" Executed="DoGroupModule" />
            <CommandBinding Command="{x:Static src:StackWindow.EntryGroupModuleCommand}" Executed="DoEntryGroupModule" />
            <CommandBinding Command="{x:Static src:StackWindow.UngroupCommand}" Executed="DoUngroup" />
            <CommandBinding Command="{x:Static src:StackWindow.UngroupModuleCommand}" Executed="DoUngroupModule" />
            <CommandBinding Command="{x:Static src:StackWindow.FoldModuleCommand}" Executed="DoFoldModule" />
            <CommandBinding Command="{x:Static src:StackWindow.FoldItemCommand}" Executed="DoFoldItem" />
            <CommandBinding Command="{x:Static src:StackWindow.RemoveAllFoldingCommand}" Executed="DoRemoveAllFolding" />

            <CommandBinding Command="{x:Static src:StackWindow.RaiseItemPriorityCommand}" Executed="DoRaiseItemPriority" />
            <CommandBinding Command="{x:Static src:StackWindow.LowerItemPriorityCommand}" Executed="DoLowerItemPriority" />
            <CommandBinding Command="{x:Static src:StackWindow.RaiseModulePriorityCommand}" Executed="DoRaiseModulePriority" />
            <CommandBinding Command="{x:Static src:StackWindow.LowerModulePriorityCommand}" Executed="DoLowerModulePriority" />

            <CommandBinding Command="{x:Static src:StackWindow.LookupSymbolsCommand}" Executed="DoLookupSymbols" />
            <CommandBinding Command="{x:Static src:StackWindow.LookupWarmSymbolsCommand}" Executed="DoLookupWarmSymbols" />
            <CommandBinding Command="{x:Static src:StackWindow.GotoSourceCommand}" Executed="DoGotoSource"/>
            <CommandBinding Command="{x:Static src:StackWindow.OpenEventsCommand}" Executed="DoOpenEvents" CanExecute="CanDoOpenEvents"/>

            <CommandBinding Command="{x:Static src:StackWindow.SetTimeRangeCommand}" Executed="DoSetTimeRange"/>
            <CommandBinding Command="{x:Static src:StackWindow.CopyTimeRangeCommand}" Executed="DoCopyTimeRange" />
            
            <CommandBinding Command="{x:Static src:StackWindow.SetScenarioListCommand}" Executed="DoSetScenarioList" CanExecute="CanSetScenarioList" />
            <CommandBinding Command="{x:Static src:StackWindow.CopyScenarioListCommand}" Executed="DoCopyScenarioList" CanExecute="CanDoScenario" />
            <CommandBinding Command="{x:Static src:StackWindow.CopyScenarioListNamesCommand}" Executed="DoCopyScenarioListNames" CanExecute="CanDoScenario" />
            <CommandBinding Command="{x:Static src:StackWindow.SortScenariosByDefaultCommand}" Executed="DoSortScenariosByDefault" CanExecute="CanDoScenario" />
            <CommandBinding Command="{x:Static src:StackWindow.SortScenariosByRootNodeCommand}" Executed="DoSortScenariosByRootNode" CanExecute="CanDoScenario" />
            <CommandBinding Command="{x:Static src:StackWindow.SortScenariosByThisNodeCommand}" Executed="DoSortScenariosByThisNode" CanExecute="CanSortScenariosByNode" />
            
            <CommandBinding Command="{x:Static src:StackWindow.IncludeItemCommand}" Executed="DoIncludeItem" />
            <CommandBinding Command="{x:Static src:StackWindow.ExcludeItemCommand}" Executed="DoExcludeItem" />

            <CommandBinding Command="{x:Static src:StackWindow.ToggleNotesPaneCommand}" Executed="DoToggleNotesPane" />
            <CommandBinding Command="{x:Static src:StackWindow.ViewObjectsCommand}" Executed="DoViewObjects" />
            <CommandBinding Command="{x:Static src:StackWindow.DumpObjectCommand}" Executed="DoDumpObject" />

            <CommandBinding Command="{x:Static src:StackWindow.ExpandCommand}" Executed="DoExpand" CanExecute="CanExpand"/>
            <CommandBinding Command="{x:Static src:StackWindow.CollapseCommand}" Executed="DoCollapse" CanExecute="CanExpand"/>
            <CommandBinding Command="{x:Static src:StackWindow.ExpandAllCommand}" Executed="DoExpandAll" CanExecute="CanExpand"/>
            <CommandBinding Command="{x:Static src:StackWindow.SetBrownBackgroundColorCommand}" Executed="DoSetBrownBackgroundColor" CanExecute="CanSetBackgroundColor"/>
            <CommandBinding Command="{x:Static src:StackWindow.SetBlueBackgroundColorCommand}" Executed="DoSetBlueBackgroundColor" CanExecute="CanSetBackgroundColor"/>
            <CommandBinding Command="{x:Static src:StackWindow.SetRedBackgroundColorCommand}" Executed="DoSetRedBackgroundColor" CanExecute="CanSetBackgroundColor"/>
            <CommandBinding Command="{x:Static src:StackWindow.FoldPercentCommand}" Executed="DoFoldPercent" />
            <CommandBinding Command="{x:Static src:StackWindow.IncreaseFoldPercentCommand}" Executed="DoIncreaseFoldPercent" />
            <CommandBinding Command="{x:Static src:StackWindow.DecreaseFoldPercentCommand}" Executed="DoDecreaseFoldPercent" />
            <CommandBinding Command="{x:Static src:StackWindow.CopyFilterParamsCommand}" Executed="DoCopyFilterParams" />
            <CommandBinding Command="{x:Static src:StackWindow.MergeFilterParamsCommand}" Executed="DoMergeFilterParams" />

            <CommandBinding Command="{x:Static src:StackWindow.CancelCommand}" Executed="DoCancel"/>
            <CommandBinding Command="{x:Static src:StackWindow.SaveCommand}" Executed="DoSave"/>
            <CommandBinding Command="{x:Static src:StackWindow.SaveAsCommand}" Executed="DoSaveAs"/>
            <CommandBinding Command="{x:Static src:StackWindow.SaveFlameGraphCommand}" Executed="DoSaveFlameGraph"/>
            <CommandBinding Command="{x:Static src:StackWindow.UsersGuideCommand}" Executed="DoHyperlinkHelp"/>
            <CommandBinding Command="Help" Executed="DoHyperlinkHelp" />
        </DockPanel.CommandBindings>
        <DockPanel.ContextMenu>
            <ContextMenu>
                <MenuItem Command="{x:Static src:StackWindow.DrillIntoCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.FlattenCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.NewWindowCommand}" />
                <MenuItem Header="Goto">
                    <MenuItem Command="{x:Static src:StackWindow.FindInByNameCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.ViewInCallerCalleeCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.ViewInCallersCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.ViewInCalleesCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.FindInCallTreeCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.OpenEventsCommand}" />
                    <Separator/>
                    <MenuItem Command="{x:Static src:StackWindow.FindCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.FindNextCommand}" />
                </MenuItem>
                <MenuItem Header="Grouping">
                    <MenuItem Command="{x:Static src:StackWindow.GroupModuleCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.EntryGroupModuleCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.UngroupCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.UngroupModuleCommand}" />
                </MenuItem>
                <MenuItem Header="Priority">
                    <MenuItem Command="{x:Static src:StackWindow.RaiseItemPriorityCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.LowerItemPriorityCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.RaiseModulePriorityCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.LowerModulePriorityCommand}" />
                </MenuItem>
                <MenuItem Header="Folding">
                    <MenuItem Command="{x:Static src:StackWindow.FoldModuleCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.FoldItemCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.RemoveAllFoldingCommand}" />
                    <Separator/>
                    <MenuItem Command="{x:Static src:StackWindow.FoldPercentCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.IncreaseFoldPercentCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.DecreaseFoldPercentCommand}" />
                </MenuItem>
                <MenuItem Command="{x:Static src:StackWindow.LookupSymbolsCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.LookupWarmSymbolsCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.GotoSourceCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:StackWindow.SetTimeRangeCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.CopyTimeRangeCommand}" />
                <MenuItem Header="Scenarios" Name="ScenarioContextMenu">
                    <MenuItem Command="{x:Static src:StackWindow.SetScenarioListCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.CopyScenarioListCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.CopyScenarioListNamesCommand}" />
                    <MenuItem Header="Sort Scenarios">
                        <MenuItem Command="{x:Static src:StackWindow.SortScenariosByDefaultCommand}" />
                        <MenuItem Command="{x:Static src:StackWindow.SortScenariosByRootNodeCommand}" />
                        <MenuItem Command="{x:Static src:StackWindow.SortScenariosByThisNodeCommand}" />
                    </MenuItem>
                </MenuItem>
                <Separator/>
                <MenuItem Command="{x:Static src:StackWindow.IncludeItemCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.ExcludeItemCommand}" />
                <Separator/>
                <MenuItem Command="{x:Static src:StackWindow.ExpandAllCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.ExpandCommand}" />
                <MenuItem Command="{x:Static src:StackWindow.CollapseCommand}" />
                <MenuItem Header="Set Background Color">
                    <MenuItem Command="{x:Static src:StackWindow.SetBrownBackgroundColorCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.SetBlueBackgroundColorCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.SetRedBackgroundColorCommand}" />
                </MenuItem>
                <Separator/>
                <MenuItem Header="FilterParams">
                    <MenuItem Command="{x:Static src:StackWindow.CopyFilterParamsCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.MergeFilterParamsCommand}" />
                </MenuItem>
                <MenuItem Header="Misc">
                    <MenuItem Command="{x:Static src:StackWindow.UpdateCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.CancelCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.ToggleNoPadOnCopyCommand}" />
                </MenuItem>
                <MenuItem Header="Memory">
                    <MenuItem Command="{x:Static src:StackWindow.ViewObjectsCommand}" />
                    <MenuItem Command="{x:Static src:StackWindow.DumpObjectCommand}" />
                </MenuItem>
                <MenuItem Command="{x:Static src:StackWindow.ToggleNotesPaneCommand}" />
            </ContextMenu>
        </DockPanel.ContextMenu>
        <!-- This is the menu bar -->
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Menu Grid.Column="0" Background="#FFD1D1D1">
                <MenuItem Header="_File">
                    <MenuItem Header="Parent _Window" Click="DoOpenParent"/>
                    <MenuItem Header="Set Symbol _Path" Click="DoSetSymbolPath" ToolTip="Sets the locations to look for symbolic information (PDB files)."/>
                    <MenuItem Header="Set Source Path" Click="DoSetSourcePath" ToolTip="Sets the locations to look for source code."/>
                    <MenuItem Header="Save" Command="{x:Static src:StackWindow.SaveCommand}" />
                    <MenuItem Header="Save View As" Command="{x:Static src:StackWindow.SaveAsCommand}" />
                    <MenuItem Header="_Close" Click="DoClose"/>
                </MenuItem>
                <MenuItem x:Name="ViewMenu" Header="_View">
                </MenuItem>
                <MenuItem Name="DiffMenu" Header="_Diff"/>
                <MenuItem Name="RegressionMenu" Header="_Regression"/>
                <MenuItem Name="PresetMenu" Header="_Preset"/>
                <MenuItem Header="_Help">
                    <MenuItem Header="_Help on Stack Viewer" Command="Help" CommandParameter="StackViewerQuickStart" />
                    <MenuItem Header="_Users Guide" Command="{x:Static src:StackWindow.UsersGuideCommand}" CommandParameter="UsersGuide"/>
                </MenuItem>
            </Menu>
            <Rectangle Grid.Column="1" Grid.ColumnSpan="10" Fill="#FFD1D1D1"/>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="StackViewerQuickStart">Stack View Help (F1)</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="UnderstandingPerfData">Understanding Perf Data</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="StartingAnAnalysis">Starting an Analysis</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="StackViewerTroubleshooting">Troubleshooting</Hyperlink>
            </TextBlock>
            <TextBlock Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,0">
                <Hyperlink Command="Help" CommandParameter="StackViewerTips">Tips</Hyperlink>
            </TextBlock>
        </Grid>
        <!-- This is the line with Back Foward, and the info bar -->
        <Grid DockPanel.Dock="Top" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Margin="3,2,3,2" FontSize="9" Command="{x:Static src:StackWindow.UpdateCommand}" 
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Update grid views with the filter parameters from textboxes. (F5)">
                Update</Button>
            <Button Grid.Column="1" Margin="7,2,3,2" FontSize="9" Command="BrowseBack" 
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Set to previous filter parameters (Alt-left arrow)">
                Back</Button>
            <Button Grid.Column="2" Margin="3,2,3,2" FontSize="9" Command="BrowseForward" 
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Set to forward filter parameters (Alt-right arrow)">
                Forward</Button>
            <TextBox Name="TopStats" Grid.Column="3" Background="Transparent" Margin="0,1" />
        </Grid>
        <!-- This is the Start, End, Find line-->
        <Grid DockPanel.Dock="Top" Margin="0,1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Margin="5,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="StartTextBox">Start:</Hyperlink>
                </TextBlock>
                <controls:HistoryComboBox  x:Name="StartTextBox" Width="90" Enter="DoUpdate" >
                    <controls:HistoryComboBox.ToolTip>
                        <TextBlock>Exclude any samples that happened before this time (MSec from start).</TextBlock>
                    </controls:HistoryComboBox.ToolTip>
                </controls:HistoryComboBox>
                <TextBlock VerticalAlignment="Center" Margin="10,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="EndTextBox" KeyboardNavigation.IsTabStop="False">End:</Hyperlink>
                </TextBlock>
                <controls:HistoryComboBox x:Name="EndTextBox" Width="90" Enter="DoUpdate">
                    <controls:HistoryComboBox.ToolTip>
                        <TextBlock>Exclude any samples that happened after this time (MSec from start).</TextBlock>
                    </controls:HistoryComboBox.ToolTip>
                </controls:HistoryComboBox>
                <StackPanel Name="ScenarioStackPanel" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="10,0,1,0">
                        <Hyperlink Command="Help" CommandParameter="ScenariosBox">Scenarios:</Hyperlink>
                    </TextBlock>
                    <controls:HistoryComboBox x:Name="ScenarioTextBox" Width="170" Enter="DoUpdate">
                        <controls:HistoryComboBox.ToolTip>
                            <TextBlock>Show these scenarios.</TextBlock>
                        </controls:HistoryComboBox.ToolTip>
                    </controls:HistoryComboBox>
                </StackPanel>
                <StackPanel Name="MemoryStackPanel"  Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="15,0,1,0">
                        <Hyperlink Command="Help" CommandParameter="PriorityTextBox">Priority:</Hyperlink>
                    </TextBlock>
                    <controls:HistoryComboBox  x:Name="PriorityTextBox" Width="170" Enter="DoUpdate">
                        <controls:HistoryComboBox.ToolTip>
                            <TextBlock>Specifies the priority of types when converting a graph to a tree.</TextBlock>
                        </controls:HistoryComboBox.ToolTip>
                    </controls:HistoryComboBox>
                    <TextBlock VerticalAlignment="Center" Margin="5,0,1,0">
                        <Hyperlink Command="Help" CommandParameter="Pri1OnlyCheckbox">Pri1Only:</Hyperlink>
                    </TextBlock>
                    <CheckBox Margin="3,0,1,0" VerticalAlignment="Center"  Name="Pri1OnlyCheckBox" Click="DoPri1Only" />
                </StackPanel>
                <StackPanel Name="SamplingStackPanel"  Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="5,0,1,0">
                        <Hyperlink Command="Help" CommandParameter="SamplingTextBox">Sampling:</Hyperlink>
                    </TextBlock>
                    <controls:HistoryComboBox  x:Name="SamplingTextBox" Width="45" Enter="DoUpdate">
                        <controls:HistoryComboBox.ToolTip>
                            <TextBlock>Sample at this rate to cut down data size.</TextBlock>
                        </controls:HistoryComboBox.ToolTip>
                    </controls:HistoryComboBox>
                </StackPanel>
            </StackPanel>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="20,0,1,0">
                        <Hyperlink Command="Help" CommandParameter="FindTextBox" KeyboardNavigation.IsTabStop="False">Find:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="FindTextBox" Grid.Column="2" MinWidth="100" Enter="DoFindEnter">
                <controls:HistoryComboBox.ToolTip>
                    <TextBlock>Find a name in the display below (Standard .NET Regular Expressions apply, case insensitive).</TextBlock>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
        </Grid>
        <!-- This is the Filtering / Grouping line -->
        <Grid DockPanel.Dock="Top" Margin="0,1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="130*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="5,0,1,0">
                    <Hyperlink Command="Help" CommandParameter="GroupPatsTextBox" KeyboardNavigation.IsTabStop="False">GroupPats:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="GroupRegExTextBox" Grid.Column="1" MinWidth="80" Enter="DoUpdate">
                <controls:HistoryComboBox.ToolTip>
                    <ToolTip StaysOpen="True">
                        <TextBlock>
                        A semicolon list of expressions pattern and replacements which define groups <LineBreak/>
                        PAT -> GROUP : Replaces frame name matching PAT with GROUP<LineBreak/>
                        PAT => GROUP : Like -> but groups by entry point into the group<LineBreak/>
                        PAT :  * = any,  % = alphaNumeric, ^ = begin, {PAT} = captures match<LineBreak/>
                        GROUP can have $1, $2 ... strings which get replaced with pattern captures.<LineBreak/>
                        Every Frame will have these patterns applied (in order) before stack trees are formed.
                        </TextBlock>
                    </ToolTip>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
            <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="5,0,1,0">
                <Hyperlink Command="Help" CommandParameter="FoldPercentTextBox" KeyboardNavigation.IsTabStop="False">Fold%:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="FoldPercentTextBox" Grid.Column="3" MinWidth="42" Enter="DoUpdate" Margin="0,0,5,0">
                <controls:HistoryComboBox.ToolTip>
                    <ToolTip StaysOpen="True">
                        <TextBlock> Nodes that have less than this % Inclusive metric will be removed and their
                        metric added to their caller.</TextBlock>
                    </ToolTip>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
            <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="5,0,1,0">
                <Hyperlink Command="Help" CommandParameter="FoldPatsTextBox" KeyboardNavigation.IsTabStop="False">FoldPats:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="FoldRegExTextBox" Grid.Column="5" MinWidth="80" Enter="DoUpdate">
                <controls:HistoryComboBox.ToolTip>
                    <ToolTip StaysOpen="True">
                        <TextBlock> 
                        A semicolon list of string patterns (* = any, % = anyAlphaNumeric, ^ = begin)<LineBreak/>
                        All nodes matching any group will be removed and their metric added to their caller.
                        </TextBlock>
                    </ToolTip>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
            <TextBlock Grid.Column="6" VerticalAlignment="Center" Margin="10,0,1,0">
                <Hyperlink Command="Help" CommandParameter="IncPatsTextBox" KeyboardNavigation.IsTabStop="False">IncPats:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="IncludeRegExTextBox" Grid.Column="7"  MinWidth="80" Margin="0,0,5,0" Enter="DoUpdate">
                <controls:HistoryComboBox.ToolTip>
                    <ToolTip StaysOpen="True">
                        <TextBlock> 
                        A semicolon list of string patterns (* = any, % = anyAlphaNumeric, ^ = begin)<LineBreak/>
                        Only stacks that have at least on fram that matches this pattern<LineBreak/>
                        will be included in the trace.
                        </TextBlock>
                    </ToolTip>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
            <TextBlock Grid.Column="8" VerticalAlignment="Center" Margin="10,0,1,0">
                <Hyperlink Command="Help" CommandParameter="ExcPatsTextBox" KeyboardNavigation.IsTabStop="False">ExcPats:</Hyperlink>
            </TextBlock>
            <controls:HistoryComboBox x:Name="ExcludeRegExTextBox" Grid.Column="9" MinWidth="80" Enter="DoUpdate">
                <controls:HistoryComboBox.ToolTip>
                    <ToolTip StaysOpen="True">
                        <TextBlock> 
                        A semicolon list of string patterns (* = any, % = anyAlphaNumeric, ^ = begin)<LineBreak/>
                        Any nodes matching this patter will be removed (as well as their children)<LineBreak/>
                        will be removed completely from the trace.
                        </TextBlock>
                    </ToolTip>
                </controls:HistoryComboBox.ToolTip>
            </controls:HistoryComboBox>
        </Grid>
        <src1:StatusBar x:Name="StatusBar" DockPanel.Dock="Bottom"/>
        <!-- this is the main window -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="75*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition x:Name="NodePaneRowDef" Height="25*"/>
            </Grid.RowDefinitions>
            <TabControl Grid.Row="0" Margin="0,3,0,0" IsEnabled="{Binding ElementName=StatusBar, Path=IsNotWorking}">
                <!-- ByNameTab-->
                <TabItem Name="ByNameTab">
                    <TabItem.Header>
                        <TextBlock>
                        By Name <Hyperlink Command="Help" CommandParameter="ByNameView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <src:PerfDataGrid x:Name="ByNameDataGrid" Margin="0,0,20,0" MouseDoubleClick="ByName_MouseDoubleClick"/>
                </TabItem>
                <!-- CallerCalleeTab -->
                <TabItem Name="CallerCalleeTab" >
                    <TabItem.Header>
                        <TextBlock>
                        Caller-Callee <Hyperlink Command="Help" CommandParameter="CallerCalleeView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <!-- TODO FIX NOW The margin is a hack.  I don't know why I need it... -->
                    <src:CallerCalleeView x:Name="CallerCalleeView" Margin="0,0,20,0" />
                </TabItem>
                <!-- CallerTreeTab -->
                <TabItem Name="CallTreeTab">
                    <TabItem.Header>
                        <TextBlock>
                        CallTree <Hyperlink Command="Help" CommandParameter="CallTreeView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <src:PerfDataGrid x:Name="CallTreeDataGrid" Margin="0,0,20,0"/>
                </TabItem>
                <!-- CallersTab -->
                <TabItem Name="CallersTab">
                    <TabItem.Header>
                        <TextBlock>
                        Callers <Hyperlink Command="Help" CommandParameter="CallersView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="CallersTitle" Grid.Row="0"  Style="{StaticResource HeaderStyle}"/>
                        <src:PerfDataGrid Grid.Row="1" x:Name="CallersDataGrid" Margin="0,0,20,0" MouseDoubleClick="DataGrid_MouseDoubleClick"/>
                    </Grid>
                </TabItem>
                <!-- CalleesTab -->
                <TabItem Name="CalleesTab">
                    <TabItem.Header>
                        <TextBlock>
                        Callees <Hyperlink Command="Help" CommandParameter="CalleesView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="CalleesTitle" Grid.Row="0"  Style="{StaticResource HeaderStyle}"/>
                        <src:PerfDataGrid Grid.Row="1" x:Name="CalleesDataGrid" Margin="0,0,20,0" MouseDoubleClick="DataGrid_MouseDoubleClick"/>
                    </Grid>
                </TabItem>
                <!-- FlameGraphTab -->
                <TabItem Name="FlameGraphTab" GotFocus="FlameGraphTab_GotFocus">
                    <TabItem.Header>
                        <TextBlock>
                            Flame Graph <Hyperlink Command="Help" CommandParameter="FlameGraphView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <src:FlameGraphDrawingCanvas x:Name="FlameGraphCanvas" Background="White" ClipToBounds="True" SizeChanged="FlameGraphCanvas_SizeChanged" CurrentFlameBoxChanged="FlameGraphCanvas_CurrentFlameBoxChanged">
                        <Canvas.ContextMenu>
                            <ContextMenu Name="noContextMenu" Visibility="Visible">
                                <MenuItem Header="Save Flame Graph" Command="{x:Static src:StackWindow.SaveFlameGraphCommand}" />
                            </ContextMenu>
                        </Canvas.ContextMenu>
                    </src:FlameGraphDrawingCanvas>
                </TabItem>
                <!-- NotesTab -->
                <TabItem Name="NotesTab" GotFocus="NotesTab_GotFocus" LostFocus="NotesTab_LostFocus">
                    <TabItem.Header>
                        <TextBlock>
                        Notes <Hyperlink Command="Help" CommandParameter="NotesView">?</Hyperlink>
                        </TextBlock>
                    </TabItem.Header>
                    <TextBox Name="NotesTabBody" AcceptsReturn="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" FontFamily="Courier New" FontSize="11" TextChanged="Notes_TextChanged"/>
                </TabItem>
            </TabControl>
            <GridSplitter Grid.Row="1" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            <ContentControl Name="NodePane"/>
            <TextBox Name="Notes" Grid.Row="2"  GotFocus="Notes_GotFocus"
                     ContextMenu="{Binding ContextMenu, ElementName=DockPanel}" 
                     AcceptsReturn="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" FontFamily="Courier New" FontSize="11" TextChanged="Notes_TextChanged" VerticalAlignment="Stretch">
                Notes typed here will be saved when the view is saved.  F2 will hide/unhide.
            </TextBox>
            <TextBlock Name="HelpMessage" Grid.Row="2" TextAlignment="Center" VerticalAlignment="Center" FontSize="35" Opacity="0.5">
                <!-- TODO decide if the fade out animation is a good idea -->
                <TextBlock.Triggers>
                    <EventTrigger RoutedEvent="TextBox.Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Opacity">
                                    <DoubleAnimation From=".5" To="0" Duration="0:0:1" BeginTime="0:0:5"/> 
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </TextBlock.Triggers>
                Type F1 for Quick Start Help.
            </TextBlock>
        </Grid>
    </DockPanel>
</src:WindowBase>
